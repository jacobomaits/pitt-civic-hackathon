openapi: "3.0.0"
info:
  description: "Hello World Api"
  version: "1.0.0"
  title: "Civic API"
tags:
  - name: Hello
    description: Hello World
servers:
  - url: http://localhost:8080/v1
    description: "localhost"


#############################################################
# PATHS #####################################################
#############################################################

paths:
  /user:
    post:
      tags:
        - Person
      summary: "Add a User"
      operationId: "addUser"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addUserRequest'
      responses:
        201:
          description: "added"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addUserResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/Exception'

  /user/{userId}:
    get:
      tags:
        - User
      summary: "Gets a user"
      operationId: "getUser"
      parameters:
        - name: userId
          in: path
          description: "The primary key for the user you'd like to retrieve."
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Returns a user."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/Exception'

  /help:
    post:
      tags:
        - Help
      summary: "Add a Help"
      operationId: "addHelp"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addHelpRequest'
      responses:
        201:
          description: "added"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addHelpResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/Exception'

  /help/{helpId}:
    get:
      tags:
        - User
      summary: "Gets a help"
      operationId: "getHelp"
      parameters:
        - name: helpId
          in: path
          description: "The primary key for the help you'd like to retrieve."
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Returns a help."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/help'
        400:
          $ref: '#/components/responses/BadRequest'
        500:
          $ref: '#/components/responses/Exception'

components:

  #############################################################
  # SCHEMAs ###################################################
  #############################################################

  schemas:

    #############################################################
    # DTOs ######################################################
    #############################################################

    user:
      type: object
      properties:
        userId:
            type: string
            example: "19ba06d2-629f-11eb-ae93-0242ac130002"
            description: "UUID that identifies a user."
        firstName:
          type: string
          example: "Jake"
          description: "Description of firstName"
        email:
          type: string
          example: "joesmith1234@gmail.com"
          description: "The email address associated to the user."
        lastName:
          type: string
          example: "Omaits"
          description: "Description of lastName"
        phone:
          type: string
          example: "7242731234"
        zip:
          type: string
          example: "15108"
        points:
          type: integer
          example: 33
        organizationId:
            type: string
            description: "UUID that identifies the org of which this user is a member. For future use, this may need to be changed to Many:1 but will remain 1:1, for now."

    addUserRequest:
      type: object
      properties:
        firstName:
          type: string
          example: "Jake"
          description: "Description of firstName"
        lastName:
          type: string
          example: "Omaits"
          description: "Description of lastName"
        email:
          type: string
          example: "joesmith1234@gmail.com"
          description: "The email address associated to the user."
        phone:
          type: string
          example: "7242731234"
        zip:
          type: string
          example: "15108"
        organizationId:
          type: string
          example: "19ba06d2-629f-11eb-ae93-0242ac130002"
          description: "UUID that identifies the org of which this user is a member. For future use, this may need to be changed to Many:1 but will remain 1:1, for now."
        password:
          type: string
          description: "The password used to login the user. This value will not be returned on GET operations."
          example: "Birr"

    addUserResponse:
      type: object
      properties:
        userId:
          type: string
          example: "19ba06d2-629f-11eb-ae93-0242ac130002"
          description: "UUID that identifies a user."

    help:
      type: object
      properties:
        helpId:
          type: string
          example: "19ba06d2-629f-11eb-ae93-0242ac130002"
          description: "UUID that identifies a help."
        userId:
          type: string
          example: "19ba06d2-629f-11eb-ae93-0242ac130002"
          description: "UUID that identifies a user."
        title:
          type: string
          example: "My cat is stuck in a tree."
          description: "Title of the help you need."
        description:
          type: string
          example: "It is a full grown bengal tiger. Please bring a tranq gun."
          description: "Description of help you need."

    addHelpRequest:
      type: object
      properties:
        title:
          type: string
          example: "My cat is stuck in a tree."
          description: "Title of the help you need."
        description:
          type: string
          example: "My cat is stuck in a tree."
          description: "It is a full grown bengal tiger. Please bring a tranq gun."
        userId:
          type: string
          example: "19ba06d2-629f-11eb-ae93-0242ac130002"
          description: "UUID that is requesting this help."

    addHelpResponse:
      type: object
      properties:
        helpId:
          type: string
          example: "19ba06d2-629f-11eb-ae93-0242ac130002"
          description: "UUID that identifies the request."

    organization:
        type: object
        properties:
            organizationId:
              type: string
              example: "19ba06d2-629f-11eb-ae93-0242ac130002"
              description: "UUID that identifies an organization."
            description:
              type: string
              description: "The name of the organization"
              example: "Coraoplis Church of Christ"


  #############################################################
  #todo: build out more comprehensive list of status codes and descriptions
  #############################################################
  responses:
    NotFound:
      description: The specified resource was not found.
    Unauthorized:
      description: You are not authorized to access this resource.
    Exception:
      description: A system error has occurred and the request was not processed.
    Created:
      description: The request was processed successfully and the resource has been created.
    BadRequest:
      description: The request could not be understood by the server due to malformed data.
    NotAllowed:
      description: The server has not implemented the requested HTTP method.
    OK:
      description: The request has processed successfully.